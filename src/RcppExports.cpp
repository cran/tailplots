// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// g_comp
NumericVector g_comp(NumericVector x, double d);
RcppExport SEXP _tailplots_g_comp(SEXP xSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(g_comp(x, d));
    return rcpp_result_gen;
END_RCPP
}
// g_scalar
double g_scalar(NumericVector x, double d);
RcppExport SEXP _tailplots_g_scalar(SEXP xSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(g_scalar(x, d));
    return rcpp_result_gen;
END_RCPP
}
// var_gamma
SEXP var_gamma(NumericVector x, double d, std::string method, int R);
RcppExport SEXP _tailplots_var_gamma(SEXP xSEXP, SEXP dSEXP, SEXP methodSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(var_gamma(x, d, method, R));
    return rcpp_result_gen;
END_RCPP
}
// ci_gamma
NumericMatrix ci_gamma(NumericVector x, NumericVector d_vec, std::string method, int R, double conf_level);
RcppExport SEXP _tailplots_ci_gamma(SEXP xSEXP, SEXP d_vecSEXP, SEXP methodSEXP, SEXP RSEXP, SEXP conf_levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d_vec(d_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type conf_level(conf_levelSEXP);
    rcpp_result_gen = Rcpp::wrap(ci_gamma(x, d_vec, method, R, conf_level));
    return rcpp_result_gen;
END_RCPP
}
// s_comp
NumericVector s_comp(NumericVector x, double u);
RcppExport SEXP _tailplots_s_comp(SEXP xSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(s_comp(x, u));
    return rcpp_result_gen;
END_RCPP
}
// s_scalar
double s_scalar(NumericVector x, double u);
RcppExport SEXP _tailplots_s_scalar(SEXP xSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(s_scalar(x, u));
    return rcpp_result_gen;
END_RCPP
}
// var_lnorm
SEXP var_lnorm(NumericVector x, double u, std::string method, int R);
RcppExport SEXP _tailplots_var_lnorm(SEXP xSEXP, SEXP uSEXP, SEXP methodSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(var_lnorm(x, u, method, R));
    return rcpp_result_gen;
END_RCPP
}
// ci_lnorm
NumericMatrix ci_lnorm(NumericVector x, NumericVector u_vec, std::string method, int R, double conf_level);
RcppExport SEXP _tailplots_ci_lnorm(SEXP xSEXP, SEXP u_vecSEXP, SEXP methodSEXP, SEXP RSEXP, SEXP conf_levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u_vec(u_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type conf_level(conf_levelSEXP);
    rcpp_result_gen = Rcpp::wrap(ci_lnorm(x, u_vec, method, R, conf_level));
    return rcpp_result_gen;
END_RCPP
}
// t_rec
NumericMatrix t_rec(NumericVector x);
RcppExport SEXP _tailplots_t_rec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(t_rec(x));
    return rcpp_result_gen;
END_RCPP
}
// t_scalar
double t_scalar(NumericVector x, double u);
RcppExport SEXP _tailplots_t_scalar(SEXP xSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(t_scalar(x, u));
    return rcpp_result_gen;
END_RCPP
}
// t_comp
NumericVector t_comp(NumericVector x, double u);
RcppExport SEXP _tailplots_t_comp(SEXP xSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(t_comp(x, u));
    return rcpp_result_gen;
END_RCPP
}
// var_pareto
SEXP var_pareto(NumericVector x, double u, std::string method, int R);
RcppExport SEXP _tailplots_var_pareto(SEXP xSEXP, SEXP uSEXP, SEXP methodSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(var_pareto(x, u, method, R));
    return rcpp_result_gen;
END_RCPP
}
// ci_pareto
NumericMatrix ci_pareto(NumericVector x, NumericVector u_vec, std::string method, int R, double conf_level);
RcppExport SEXP _tailplots_ci_pareto(SEXP xSEXP, SEXP u_vecSEXP, SEXP methodSEXP, SEXP RSEXP, SEXP conf_levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u_vec(u_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type conf_level(conf_levelSEXP);
    rcpp_result_gen = Rcpp::wrap(ci_pareto(x, u_vec, method, R, conf_level));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tailplots_g_comp", (DL_FUNC) &_tailplots_g_comp, 2},
    {"_tailplots_g_scalar", (DL_FUNC) &_tailplots_g_scalar, 2},
    {"_tailplots_var_gamma", (DL_FUNC) &_tailplots_var_gamma, 4},
    {"_tailplots_ci_gamma", (DL_FUNC) &_tailplots_ci_gamma, 5},
    {"_tailplots_s_comp", (DL_FUNC) &_tailplots_s_comp, 2},
    {"_tailplots_s_scalar", (DL_FUNC) &_tailplots_s_scalar, 2},
    {"_tailplots_var_lnorm", (DL_FUNC) &_tailplots_var_lnorm, 4},
    {"_tailplots_ci_lnorm", (DL_FUNC) &_tailplots_ci_lnorm, 5},
    {"_tailplots_t_rec", (DL_FUNC) &_tailplots_t_rec, 1},
    {"_tailplots_t_scalar", (DL_FUNC) &_tailplots_t_scalar, 2},
    {"_tailplots_t_comp", (DL_FUNC) &_tailplots_t_comp, 2},
    {"_tailplots_var_pareto", (DL_FUNC) &_tailplots_var_pareto, 4},
    {"_tailplots_ci_pareto", (DL_FUNC) &_tailplots_ci_pareto, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tailplots(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
